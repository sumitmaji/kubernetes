extraEnv: |
  - name: KEYCLOAK_LOGLEVEL
    value: DEBUG
  - name: KEYCLOAK_USER
    value: sumit
  - name: KEYCLOAK_PASSWORD
    value: sumitabc
  - name: PROXY_ADDRESS_FORWARDING
    value: "true"

ingress:
  # If `true`, an Ingress is created
  enabled: true
  # The name of the Ingress Class associated with this ingress
  ingressClassName: "nginx"
  # The Service port targeted by the Ingress
  servicePort: http
  # Ingress annotations
  annotations:
    ## Resolve HTTP 502 error using ingress-nginx:
    ## See https://www.ibm.com/support/pages/502-error-ingress-keycloak-response
   nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
   kubernetes.io/ingress.class: nginx
   kubernetes.io/ingress.allow-http: "false"
   nginx.ingress.kubernetes.io/ssl-redirect: "true"
   ingress.kubernetes.io/ssl-passthrough: "true"
   nginx.ingress.kubernetes.io/rewrite-target: /$2
   nginx.ingress.kubernetes.io/backend-protocol: "HTTP"

  # Additional Ingress labels
  labels: {}
  # List of rules for the Ingress
  rules:
    -
      # Ingress host
      host: master.cloud.com
      # Paths for the host
      paths:
        - path: /keycloak(/|$)(.*)
          pathType: ImplementationSpecific
  # Example TLS configuration
  tls:
    - hosts:
        - master.cloud.com
      secretName: appingress-certificate
postgresql:
  enabled: true
  auth:
    postgresPassword: "sumit123"
    username: sumit_keycloak
    password: "sumit123"
  primary:
    persistence:
      storageClass: "keycloak-storage"
  common:
    global:
      storageClass: "keycloak-storage"
