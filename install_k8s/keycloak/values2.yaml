proxy: edge
auth:
  adminUser: sumit
  adminPassword: sumit
extraEnvVars:
  - name: KEYCLOAK_LOG_LEVEL
    valueFrom:
      secretKeyRef:
        name: keycloak-secrets
        key: KEYCLOAK_LOG_LEVEL 

#Admin user is "user" and password is fetched from the secret keycloak with key "admin-password"
  # - name: KEYCLOAK_ADMIN
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: metadata.name
  # - name: KEYCLOAK_ADMIN_PASSWORD
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: metadata.name

ingress:
  ## @param ingress.enabled Enable ingress record generation for Keycloak
  ##
  enabled: true
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: "nginx"
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record (evaluated as template)
  ##
  hostname: master.cloud.com
  ## @param ingress.path [string] Default path for the ingress record (evaluated as template)
  ##
  path: /
  ## @param ingress.servicePort Backend service port to use
  ## Default is http. Alternative is https.
  ##
  servicePort: http
  ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations:
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  ## @param ingress.labels Additional labels for the Ingress resource.
  ## e.g:
  ## labels:
  ##   app: keycloak
  ##
  labels: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" (tpl .Values.ingress.hostname .) }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: true
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: true

postgresql:
  enabled: true
  auth:
    existingSecret: keycloak-postgresql
  primary:
    persistence:
      storageClass: "keycloak-storage"
  common:
    global:
      storageClass: "keycloak-storage"
## @param extraVolumes Optionally specify extra list of additional volumes for Keycloak pods
##
extraVolumes:
  - name: secrets-store-inline
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: "keycloak-admin-secret-provider"

## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for Keycloak container(s)
##
extraVolumeMounts:
  - name: secrets-store-inline
    mountPath: "/mnt/secrets-store"
    readOnly: true

podAnnotations:
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "keycloak-admin-role"
  vault.hashicorp.com/agent-inject-secret-ADMIN_PASSWORD: "secret/keycloak/admin"
  vault.hashicorp.com/agent-inject-secret-ADMIN_USER: "secret/keycloak/admin"
  vault.hashicorp.com/agent-inject-template-ADMIN_PASSWORD: |
    {{`{{- with secret "secret/keycloak/admin" -}}`}}
    {{`{{ .Data.data.adminPassword }}`}}
    {{`{{- end }}`}}
  vault.hashicorp.com/agent-inject-template-ADMIN_USER: |
    {{`{{- with secret "secret/keycloak/admin" -}}`}}
    {{`{{ .Data.data.adminUser }}`}}
    {{`{{- end }}`}}