replicaCount: 1

image:
  repository: registry.gokcloud.com/agent
  tag: latest
  pullPolicy: Always

serviceAccount:
  create: true
  name: agent-backend-sa

env:
  OAUTH_ISSUER: "https://keycloak.gokcloud.com/realms/GokDevelopers"
  OAUTH_CLIENT_ID: "gok-developers-client"
  REQUIRED_ROLE: "administrators"
  RABBITMQ_HOST: "rabbitmq.rabbitmq"
  RABBITMQ_PORT: "5672"
  RABBITMQ_VHOST: "/"
  
  # Vault Configuration for RabbitMQ credentials
  VAULT_ADDR: "http://vault.vault:8200"
  VAULT_PATH: "secret/rabbitmq"
  # VAULT_TOKEN will be provided via secret or service account

vault:
  # Enable Vault integration for RabbitMQ credentials
  enabled: true
  
  # Vault server configuration
  address: "http://vault.vault:8200"
  
  # Path to RabbitMQ credentials in Vault
  credentialPath: "secret/rabbitmq"
  
  # Authentication method for Vault
  auth:
    # Use Kubernetes service account for authentication
    method: "kubernetes"
    # Alternative: use token-based authentication
    # method: "token"
    # token: "vault-token-here"
    
    # Kubernetes auth configuration
    kubernetes:
      role: "gok-agent-role"
      serviceAccount: "agent-backend-sa"
  
  # Fallback configuration if Vault is unavailable
  fallback:
    # Try Kubernetes secret as fallback
    useKubernetesSecret: true
    secretName: "rabbitmq-default-user"
    secretNamespace: "rabbitmq"
    
    # Final fallback to environment variables
    useEnvironmentVariables: true

# Legacy RabbitMQ configuration (deprecated, use Vault instead)
# rabbitmq:
#   user: "guest"
#   password: "guest"