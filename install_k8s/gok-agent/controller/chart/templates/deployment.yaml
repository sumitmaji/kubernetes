apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-controller
  labels:
    app: web-controller
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: web-controller
  template:
    metadata:
      labels:
        app: web-controller
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | default "gok-agent" }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret | default "regcred" }}
      containers:
        - name: api
          image: "{{ .Values.image.api }}"
          imagePullPolicy: Always
          volumeMounts:
          - name: ca-cert
            mountPath: /usr/local/share/ca-certificates/issuer.crt
            subPath: issuer.crt
          - name: service-account-token
            mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            readOnly: true
          env:
            - name: RABBITMQ_HOST
              value: "{{ .Values.env.RABBITMQ_HOST }}"
            - name: RABBITMQ_PORT
              value: "{{ .Values.env.RABBITMQ_PORT }}"
            - name: RABBITMQ_VHOST
              value: "{{ .Values.env.RABBITMQ_VHOST }}"
            {{- if .Values.vault.enabled }}
            # Vault Configuration for K8s Service Account Auth
            - name: VAULT_ADDR
              value: "{{ .Values.vault.address }}"
            - name: VAULT_K8S_ROLE
              value: "{{ .Values.vault.auth.kubernetes.role }}"
            - name: VAULT_K8S_AUTH_PATH
              value: "{{ .Values.vault.auth.kubernetes.authPath }}"
            - name: VAULT_PATH
              value: "{{ .Values.vault.credentialPath }}"
            {{- end }}
            {{- if .Values.env.RABBITMQ_USER }}
            - name: RABBITMQ_USER
              value: "{{ .Values.env.RABBITMQ_USER }}"
            {{- end }}
            {{- if .Values.env.RABBITMQ_PASSWORD }}
            - name: RABBITMQ_PASSWORD
              value: "{{ .Values.env.RABBITMQ_PASSWORD }}"
            {{- end }}
            - name: OAUTH_ISSUER
              value: "{{ .Values.oidc.issuer }}"
            - name: OAUTH_CLIENT_ID
              value: "{{ .Values.oidc.clientId }}"
            - name: REQUIRED_GROUP
              value: "{{ .Values.oidc.requiredGroup }}"
            - name: REQUESTS_CA_BUNDLE
              value: /usr/local/share/ca-certificates/issuer.crt
      volumes:
      - name: ca-cert
        configMap:
          name: ca-cert
      - name: service-account-token
        projected:
          sources:
          - serviceAccountToken:
              path: token
              expirationSeconds: 3600
          - configMap:
              name: kube-root-ca.crt
              items:
              - key: ca.crt
                path: ca.crt
          - downwardAPI:
              items:
              - path: namespace
                fieldRef:
                  fieldPath: metadata.namespace
          