# {{ service_name }} Controller - Multi-stage build
# Generated by Service Template Generator - Agent-Controller Pattern

# Frontend build stage
FROM node:20 AS frontend-builder
WORKDIR /frontend

# Copy controller frontend package files
COPY controller/frontend/package*.json ./
RUN npm install

# Copy controller frontend source and build
COPY controller/frontend/ ./
RUN npm run build

# Backend build and production stage
FROM python:3.11-slim
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy controller backend requirements and install
COPY controller/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy controller backend code
COPY controller/controller.py ./

# Copy frontend build output
COPY --from=frontend-builder /frontend/build ./static/

# Environment variables
ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=production
ENV PORT={{ backend_port }}
{% if enable_oauth -%}
ENV OAUTH_ISSUER="{{ oauth_issuer }}"
ENV OAUTH_CLIENT_ID="{{ oauth_client_id }}"
{% endif -%}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:{{ backend_port }}/health || exit 1

# Create non-root user
RUN useradd --create-home --shell /bin/bash {{ service_name_snake }}
USER {{ service_name_snake }}

# Expose port
EXPOSE {{ backend_port }}

# Labels
LABEL maintainer="GokCloud Team"
LABEL service.name="{{ service_name }}"
LABEL service.component="controller"
LABEL service.version="{{ version }}"
LABEL service.pattern="agent-controller"

# Run the controller
CMD ["python", "controller.py"]